using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SMARTFI.OrionContextBroker.Client.Models
{
    /// <summary>
    /// Notification conditions for each entity type. Used for context subscriptions.
    /// </summary>
    public class NotifyCondition
    {
        /// <summary>
        /// The entity type to apply this condition to
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }

        /// <summary>
        /// The notification conditions. Use values from NotifyConditionTypes.
        /// </summary>
        [JsonProperty("condValues")]
        public List<string> ConditionValues { get; set; }
    }

    /// <summary>
    /// Represents a context subscription
    /// </summary>
    public class ContextSubscription
    {
        /// <summary>
        /// The Id of the context subscription. Is required when updating or deleting an existing context subscription.
        /// </summary>
        [JsonProperty("SubscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// The entities to subscribe to
        /// </summary>
        [JsonProperty("entities")]
        public List<ContextQueryEntity> Entities { get; set; }

        /// <summary>
        /// The attributes to subscribe to
        /// </summary>
        [JsonProperty("attributes")]
        public List<string> Attributes { get; set; }

        /// <summary>
        /// The URL that will receive the notification as a POST of 
        /// </summary>
        [JsonProperty("reference")]
        public string Reference { get; set; }

        /// <summary>
        /// The duration of the subscription
        /// </summary>
        [JsonProperty("duration")]
        public string Duration { get; set; }

        /// <summary>
        /// The notification conditions
        /// </summary>
        [JsonProperty("notifyConditions")]
        public List<NotifyCondition> NotifyConditions { get; set; }

        /// <summary>
        /// 
        /// </summary>
        [JsonProperty("throttling")]
        public string Throttling { get; set; }
    }

    /// <summary>
    /// The response when subscribing to a context
    /// </summary>
    public class SubscribeResponse
    {
        /// <summary>
        /// The duration of the subscription
        /// </summary>
        [JsonProperty("duration")]
        public string Duration { get; set; }

        /// <summary>
        /// The subscription id, generated by the context broker
        /// </summary>
        [JsonProperty("subscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// 
        /// </summary>
        [JsonProperty("throttling")]
        public string Throttling { get; set; }
    }

    /// <summary>
    /// The response wrapper when subscribing to a context
    /// </summary>
    public class ContextSubscriptionResponse
    {
        /// <summary>
        /// The response when subscribing to a context
        /// </summary>
        [JsonProperty("subscribeResponse")]
        public SubscribeResponse SubscribeResponse { get; set; }

        /// <summary>
        /// The error information, if an error occurred
        /// </summary>
        [JsonProperty("errorCode")]
        public ErrorCode ErrorCode { get; set; }
    }

    /// <summary>
    /// The response when unsubscribing from a context
    /// </summary>
    public class ContextUnsubscribeResponse
    {
        /// <summary>
        /// The subscription id
        /// </summary>
        [JsonProperty("subscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// THe status code of the response
        /// </summary>
        [JsonProperty("statusCode")]
        public StatusCode StatusCode { get; set; }
    }
}
